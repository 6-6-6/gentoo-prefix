#!/usr/bin/env bash

BOOTSTRAP="${BASH_SOURCE[0]%/*}/bootstrap-prefix.sh"
BOOTURL="http://rsync.prefix.bitzolder.nl/scripts/bootstrap-prefix.sh"
UPLOAD="rsync1.prefix.bitzolder.nl::gentoo-portage-bootstraps"

do_fetch() {
	local FETCHCOMMAND
	# Try to find a download manager, we only deal with wget,
	# curl, FreeBSD's fetch and ftp.
	if [[ x$(type -t wget) == "xfile" ]] ; then
		FETCH_COMMAND="wget -O -"
		[[ $(wget -h) == *"--no-check-certificate"* ]] && \
			FETCH_COMMAND+=" --no-check-certificate"
	elif [[ x$(type -t curl) == "xfile" ]] ; then
		FETCH_COMMAND="curl -f -L"
	else
		echo "could not download ${1##*/}"
		exit 1
	fi

	${FETCH_COMMAND} "${*}" || exit 1
}

do_prepare() {
	local bitw=$1
	local dte=$2
	local bootstrap

	if [[ -n ${RESUME} && -n ${bitw} && -n ${dte} ]] ; then
		bootstrap=bootstrap${bitw}-${dte}/bootstrap-prefix.sh
	elif [[ -n ${DOLOCAL} ]] ; then
		bootstrap=${BOOTSTRAP}
	else
		bootstrap=dobootstrap-do_prepare-$$
		do_fetch ${BOOTURL} > ${bootstrap}
	fi

	local chost=$(${BASH} ${bootstrap} chost.guess x)
	case ${chost} in
		*86-*)
			if [[ ${bitw} == 64 ]] ; then
				chost=x86_64-${chost#*-}
			else
				bitw=32
				chost=i386-${chost#*-}
			fi
			;;
		x86_64-*)
			if [[ ${bitw} == 32 ]] ; then
				chost=i386-${chost#*-}
			else
				bitw=64
				chost=x86_64-${chost#*-}
			fi
			;;
		powerpc-*)
			if [[ ${bitw} == 64 ]] ; then
				chost=powerpc64-${chost#*-}
			else
				bitw=32
				chost=powerpc-${chost#*-}
			fi
			;;
		sparc-*)
			if [[ ${bitw} == 64 ]] ; then
				chost=sparcv9-${chost#*-}
			else
				bitw=32
				chost=sparc-${chost#*-}
			fi
			;;
		sparcv9-*|sparc64-*)
			if [[ ${bitw} == 32 ]] ; then
				chost=sparc-${chost#*-}
			else
				bitw=64
				chost=sparcv9-${chost#*-}
			fi
			;;
		*)
			echo "unhandled CHOST: ${chost}"
			rm -f dobootstrap-do_prepare-$$
			exit 1
			;;
	esac

	[[ -z ${dte} ]] && dte=$(date "+%Y%m%d")
	EPREFIX=${PWD}/bootstrap${bitw}-${dte}
	[[ -n ${OVERRIDE_EPREFIX} ]] && EPREFIX=${OVERRIDE_EPREFIX}

	local bootstrapscript=$(realpath ${BASH_SOURCE[0]} 2>/dev/null)
	if [[ -z ${bootstrapscript} ]] ; then
		local b=${BASH_SOURCE[0]}
		cd "${b%/*}"
		bootstrapscript=$(pwd -P)/${b##*/}
	fi
	echo "EPREFIX=${EPREFIX}"
	mkdir -p "${EPREFIX}"
	if [[ ${bootstrap} == dobootstrap-do_prepare-$$ ]] ; then
		mv "${bootstrap}" "${EPREFIX}"/bootstrap-prefix.sh
	elif [[ ${bootstrap} != "${EPREFIX}"/bootstrap-prefix.sh ]] ; then
		cp "${bootstrap}" "${EPREFIX}"/bootstrap-prefix.sh
	fi
	cd "${EPREFIX}" || exit 1

	# optional program to keep the machine from sleeping
	# macOS/BSD: caffeinate
	keepalive=$(type -P caffeinate)
	[[ -x ${keepalive} ]] && keepalive+=" -i -m -s" || keepalive=

	local libressluse="libressl -curl_ssl_openssl curl_ssl_libressl"
	starttime=${SECONDS}
	env -i \
		HOME=${EPREFIX} \
		SHELL=/bin/sh \
		TERM=${TERM} \
		USER=${USER} \
		CHOST=${chost} \
		EPREFIX=${EPREFIX} \
		${GENTOO_MIRRORS+GENTOO_MIRRORS="${GENTOO_MIRRORS}"} \
		${DOLOCAL+DOLOCAL=1} \
		${DOLIBRESSL+MAKE_CONF_ADDITIONAL_USE="${libressluse}"} \
		${RESUME+RESUME=1} \
		${LATEST_TREE_YES+LATEST_TREE_YES=1} \
		${TREE_FROM_SRC+TREE_FROM_SRC=}${TREE_FROM_SRC} \
		${keepalive} ${BASH} ${bootstrapscript} bootstrap
	endtime=${SECONDS}

	if [[ -n ${DOPUBLISH} ]] ; then
		echo $((endtime - starttime)) > elapsedtime

		# massage CHOST on Linux systems
		if [[ ${chost} == *-linux-gnu* ]] ; then
			# two choices here: x86_64_ubuntu16-linux-gnu
			#                   x86_64-pc-linux-ubuntu16
			# I choose the latter because it is compatible with most
			# UNIX vendors
			local dist=$(lsb_release -si)
			local rel=$(lsb_release -sr)
			local platform=pc
			# this is the logic used in bootstrap-prefix.sh
			[[ ${PREFIX_DISABLE_RAP} != "yes" ]] && platform=rap
			chost=${chost%%-*}-${platform}-linux-${dist,,}${rel}
		fi

		${keepalive} rsync -q /dev/null ${UPLOAD}/${HOSTNAME}-$$/
		${keepalive} rsync -q /dev/null ${UPLOAD}/${HOSTNAME}-$$/${chost}/
		${keepalive} rsync -rltv \
			--exclude=work/ \
			--exclude=homedir/ \
			--exclude=files \
			--exclude=distdir/ \
			--exclude=image/ \
			{stage,.stage}* \
			bootstrap-prefix.sh \
			startprefix \
			elapsedtime \
			var/cache/distfiles \
			var/tmp/portage \
			var/log/emerge.log \
			etc/portage/make.conf \
			${UPLOAD}/${HOSTNAME}-$$/${chost}/${dte}/
		${keepalive} rsync -q /dev/null \
			${UPLOAD}/${HOSTNAME}-$$/${chost}/${dte}/push-complete/
	fi
}

do_bootstrap() {
	chmod 755 bootstrap-prefix.sh || exit 1
	${BASH} ./bootstrap-prefix.sh ${EPREFIX} noninteractive
}

case $1 in
	bootstrap)
		do_bootstrap
		;;
	local)
		export DOLOCAL=1
		do_prepare $2
		;;
	resume)
		export RESUME=1
		do_prepare "$2" ${3:-${BOOTSTRAP_DATE}}
		;;
	*)
		if [[ ${0} == /net/* ]] ; then
			echo "internal host, activating local and DOPUBLISH"
			export DOLOCAL=1
			export DOPUBLISH=1
			export GENTOO_MIRRORS="http://distfileslocal http://distfiles.gentoo.org"
		fi
		for arg in "${@:2}" ; do
			case "${arg}" in
				libressl)   export DOLIBRESSL=1      ;;
				latesttree) export LATEST_TREE_YES=1 ;;
			esac
		done
		do_prepare $1
		;;
esac

