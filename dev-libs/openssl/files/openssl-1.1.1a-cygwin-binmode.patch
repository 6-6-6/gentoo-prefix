For the setmode(O_TEXT), not submitted upstream yet:
https://cygwin.com/ml/cygwin/2019-02/msg00150.html
https://cygwin.com/ml/cygwin/2019-02/msg00280.html

For the chmod, accepted upstream:
https://github.com/openssl/openssl/pull/8226
--- openssl-1.1.1a/crypto/bio/bss_file.c.orig	2019-02-15 19:41:48.605378800 +0100
+++ openssl-1.1.1a/crypto/bio/bss_file.c	2019-02-15 19:42:53.136709200 +0100
@@ -253,9 +253,14 @@ static long file_ctrl(BIO *b, int cmd, long num, void *ptr)
             }
 #  elif defined(OPENSSL_SYS_WIN32_CYGWIN)
             int fd = fileno((FILE *)ptr);
-            if (num & BIO_FP_TEXT)
-                setmode(fd, O_TEXT);
-            else
+            if (num & BIO_FP_TEXT) {
+                /* Cygwin prefers text mode with text mounts only,
+                 * so we can force text mode if we do reads only. */
+                if (fcntl(fd, F_GETFL) & O_RDONLY)
+                    setmode(fd, O_TEXT); /* Ignore \r with any read. */
+                else
+                    setmode(fd, 0); /* allow but do not force text mode */
+            } else
                 setmode(fd, O_BINARY);
 #  endif
         }
@@ -279,11 +284,21 @@ static long file_ctrl(BIO *b, int cmd, long num, void *ptr)
             ret = 0;
             break;
         }
-#  if defined(OPENSSL_SYS_MSDOS) || defined(OPENSSL_SYS_WINDOWS) || defined(OPENSSL_SYS_WIN32_CYGWIN)
+#  if defined(OPENSSL_SYS_MSDOS) || defined(OPENSSL_SYS_WINDOWS)
         if (!(num & BIO_FP_TEXT))
             OPENSSL_strlcat(p, "b", sizeof(p));
         else
             OPENSSL_strlcat(p, "t", sizeof(p));
+#  elif defined(OPENSSL_SYS_WIN32_CYGWIN)
+        if (!(num & BIO_FP_TEXT))
+            OPENSSL_strlcat(p, "b", sizeof(p));
+        else if (!(num & BIO_FP_APPEND) && !(num & BIO_FP_WRITE)) {
+            /* Cygwin prefers text mode with text mounts only,
+             * so we can force text mode if we do reads only.
+             * Unfortunately, the only API to disable binmode
+             * without forcing textmode is setmode(fd, 0). */
+            OPENSSL_strlcat(p, "t", sizeof(p));
+        }
 #  endif
         fp = openssl_fopen(ptr, p);
         if (fp == NULL) {
@@ -293,6 +308,11 @@ static long file_ctrl(BIO *b, int cmd, long num, void *ptr)
             ret = 0;
             break;
         }
+#  if defined(OPENSSL_SYS_WIN32_CYGWIN)
+        if ((num & BIO_FP_TEXT)
+            && ((num & BIO_FP_APPEND) || (num & BIO_FP_WRITE)))
+            setmode(fileno(fp), 0); /* allow but do not force text mode */
+#  endif
         b->ptr = fp;
         b->init = 1;
         BIO_clear_flags(b, BIO_FLAGS_UPLINK); /* we did fopen -> we disengage
--- openssl-1.1.1a/Configurations/unix-Makefile.tmpl.orig	2019-02-15 19:47:36.464755100 +0100
+++ openssl-1.1.1a/Configurations/unix-Makefile.tmpl	2019-02-15 19:47:42.605379700 +0100
@@ -650,7 +650,7 @@
 		: {- output_off() unless windowsdll(); "" -}; \
 		$(ECHO) "install $$s -> $(DESTDIR)$(INSTALLTOP)/bin/$$fn"; \
 		cp $$s $(DESTDIR)$(INSTALLTOP)/bin/$$fn.new; \
-		chmod 644 $(DESTDIR)$(INSTALLTOP)/bin/$$fn.new; \
+		chmod 755 $(DESTDIR)$(INSTALLTOP)/bin/$$fn.new; \
 		mv -f $(DESTDIR)$(INSTALLTOP)/bin/$$fn.new \
 		      $(DESTDIR)$(INSTALLTOP)/bin/$$fn; \
 		: {- output_on() unless windowsdll(); "" -}{- output_off() if windowsdll(); "" -}; \
